window.yii = function (t) {
    var e = {
        reloadableScripts: [],
        clickableSelector: 'a, button, input[type="submit"], input[type="button"], input[type="reset"], input[type="image"]',
        changeableSelector: "select, input, textarea",
        getCsrfParam: function () {
            return t("meta[name=csrf-param]").attr("content")
        },
        getCsrfToken: function () {
            return t("meta[name=csrf-token]").attr("content")
        },
        setCsrfToken: function (e, n) {
            t("meta[name=csrf-param]").attr("content", e), t("meta[name=csrf-token]").attr("content", n)
        },
        refreshCsrfToken: function () {
            var n = e.getCsrfToken();
            n && t('form input[name="' + e.getCsrfParam() + '"]').val(n)
        },
        confirm: function (t, e, n) {
            window.confirm(t) ? e && e() : n && n()
        },
        handleAction: function (n, i) {
            var a, r, o, c, s = n.attr("data-form") ? t("#" + n.attr("data-form")) : n.closest("form"),
                d = !n.data("method") && s ? s.attr("method") : n.data("method"), u = n.attr("href"),
                l = u && "#" !== u, p = n.data("params"), m = p && t.isPlainObject(p),
                f = void 0 !== (f = n.data("pjax")) && 0 !== f && t.support.pjax, h = {};
            t.each(["submit", "reset", "elements", "length", "name", "acceptCharset", "action", "enctype", "method", "target"], (function (t, e) {
                m && p.hasOwnProperty(e) && console.error("Parameter name '" + e + "' conflicts with a same named form property. Please use another name.")
            })), f && (void 0 !== (c = n.data("pjax-container")) && c.length || (c = n.closest("[data-pjax-container]").attr("id") ? "#" + n.closest("[data-pjax-container]").attr("id") : ""), c.length || (c = "body"), h = {
                container: c,
                push: !!n.data("pjax-push-state"),
                replace: !!n.data("pjax-replace-state"),
                scrollTo: n.data("pjax-scrollto"),
                pushRedirect: n.data("pjax-push-redirect"),
                replaceRedirect: n.data("pjax-replace-redirect"),
                skipOuterContainers: n.data("pjax-skip-outer-containers"),
                timeout: n.data("pjax-timeout"),
                originalEvent: i,
                originalTarget: n
            }), void 0 !== d ? ((o = !s.length) ? (l || (u = e.getCurrentUrl()), s = t("<form/>", {
                method: d,
                action: u
            }), (c = n.attr("target")) && s.attr("target", c), /(get|post)/i.test(d) || (s.append(t("<input/>", {
                name: "_method",
                value: d,
                type: "hidden"
            })), d = "post", s.attr("method", d)), !/post/i.test(d) || (c = e.getCsrfParam()) && s.append(t("<input/>", {
                name: c,
                value: e.getCsrfToken(),
                type: "hidden"
            })), s.hide().appendTo("body")) : (a = s.attr("method"), s.attr("method", d), l && (r = s.attr("action"), s.attr("action", u))), (d = s.data("yiiActiveForm")) && (d.submitObject = n), m && t.each(p, (function (e, n) {
                s.append(t("<input/>").attr({name: e, value: n, type: "hidden"}))
            })), f && s.on("submit", (function (e) {
                t.pjax.submit(e, h)
            })), s.trigger("submit"), t.when(s.data("yiiSubmitFinalizePromise")).done((function () {
                o ? s.remove() : (void 0 !== r && s.attr("action", r), s.attr("method", a), m && t.each(p, (function (e) {
                    t('input[name="' + e + '"]', s).remove()
                })))
            }))) : l ? f ? t.pjax.click(i, h) : window.location.assign(u) : n.is(":submit") && s.length && (f && s.on("submit", (function (e) {
                t.pjax.submit(e, h)
            })), s.trigger("submit"))
        },
        getQueryParams: function (e) {
            var n = e.indexOf("?");
            if (n < 0) return {};
            for (var i = t.grep(e.substring(n + 1).split("#")[0].split("&"), (function (t) {
                return "" !== t
            })), a = {}, r = 0, o = i.length; r < o; r++) {
                var c = i[r].split("="), s = decodeURIComponent(c[0].replace(/\+/g, "%20"));
                c = 1 < c.length ? decodeURIComponent(c[1].replace(/\+/g, "%20")) : "";
                s.length && (void 0 === a[s] ? a[s] = c || "" : (t.isArray(a[s]) || (a[s] = [a[s]]), a[s].push(c || "")))
            }
            return a
        },
        initModule: function (n) {
            void 0 !== n.isActive && !n.isActive || (t.isFunction(n.init) && n.init(), t.each(n, (function () {
                t.isPlainObject(this) && e.initModule(this)
            })))
        },
        init: function () {
            var a;

            function r(n) {
                var i = t(this), a = i.data("method"), r = i.data("confirm"), o = i.data("form");
                return void 0 === a && void 0 === r && void 0 === o || (void 0 !== r && !1 !== r && "" !== r ? t.proxy(e.confirm, this)(r, (function () {
                    e.handleAction(i, n)
                })) : e.handleAction(i, n), n.stopImmediatePropagation(), !1)
            }

            t.ajaxPrefilter((function (t, n, i) {
                !t.crossDomain && e.getCsrfParam() && i.setRequestHeader("X-CSRF-Token", e.getCsrfToken())
            })), e.refreshCsrfToken(), t(document).ajaxComplete((function (t, e) {
                (e = e && e.getResponseHeader("X-Redirect")) && window.location.assign(e)
            })), a = {}, t("script[src]").each((function () {
                var t = i(this.src);
                a[t] = !0
            })), t.ajaxPrefilter("script", (function (t, e, r) {
                var o, c;
                "jsonp" != t.dataType && (o = i(t.url), c = !0 === a[o] && !n(o), t = void 0 !== a[o] && !0 === a[o].xhrDone, c || t ? r.abort() : (void 0 !== a[o] && !0 !== a[o] || (a[o] = {
                    xhrList: [],
                    xhrDone: !1
                }), r.done((function (t, e, n) {
                    if (!0 !== a[n.yiiUrl].xhrDone) {
                        a[n.yiiUrl].xhrDone = !0;
                        for (var i = 0, r = a[n.yiiUrl].xhrList.length; i < r; i++) {
                            var o = a[n.yiiUrl].xhrList[i];
                            o && o.readyState !== XMLHttpRequest.DONE && o.abort()
                        }
                        a[n.yiiUrl] = !0
                    }
                })).fail((function (t, e) {
                    if ("abort" !== e) {
                        delete a[t.yiiUrl].xhrList[t.yiiIndex];
                        for (var n = !0, i = 0, r = a[t.yiiUrl].xhrList.length; i < r; i++) a[t.yiiUrl].xhrList[i] && (n = !1);
                        n && delete a[t.yiiUrl]
                    }
                })), r.yiiIndex = a[o].xhrList.length, r.yiiUrl = o, a[o].xhrList[r.yiiIndex] = r))
            })), t(document).ajaxComplete((function () {
                var e = [];
                t("link[rel=stylesheet]").each((function () {
                    var a = i(this.href);
                    n(a) || (-1 === t.inArray(a, e) ? e.push(a) : t(this).remove())
                }))
            })), t(document).on("click.yii", e.clickableSelector, r).on("change.yii", e.changeableSelector, r)
        },
        getBaseCurrentUrl: function () {
            return window.location.protocol + "//" + window.location.host
        },
        getCurrentUrl: function () {
            return window.location.href
        }
    };

    function n(t) {
        for (var n = 0; n < e.reloadableScripts.length; n++) {
            var a = i(e.reloadableScripts[n]);
            if (!0 === new RegExp("^" + a.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&").split("\\*").join(".+") + "$").test(t)) return 1
        }
    }

    function i(t) {
        return "/" === t.charAt(0) ? e.getBaseCurrentUrl() + t : t
    }

    return e
}(window.jQuery), window.jQuery((function () {
    window.yii.initModule(window.yii)
}));